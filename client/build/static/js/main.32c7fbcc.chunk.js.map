{"version":3,"sources":["providers/AuthProvider.tsx","styles/theme.ts","styles/globalStyle.ts","components/Component.tsx","components/Button.tsx","components/Heading.tsx","providers/SpotifyProvider.tsx","views/Admin.tsx","components/HeadingWithBack.tsx","components/ImageBlock.tsx","components/Menu.tsx","providers/PlayerProvider.tsx","utils/msToLength.ts","components/Player.tsx","providers/SearchProvider.tsx","components/SearchInput.tsx","components/Topbar.tsx","components/Layout.tsx","components/ListItem.tsx","components/List.tsx","utils/tracksToListItems.ts","views/Artist.tsx","components/Text.tsx","views/Home.tsx","views/Login.tsx","views/Lyrics.tsx","views/Profile.tsx","views/Search.tsx","components/GridItem.tsx","components/Grid.tsx","components/RadioButtons.tsx","views/TopArtists.tsx","views/TopTracks.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","loading","setLoading","location","useLocation","useEffect","cookieRefreshToken","Cookies","get","axios","post","then","data","catch","err","console","error","code","URLSearchParams","search","set","expires","interval","setInterval","clearInterval","value","signOut","remove","Provider","theme","colors","black","white","primary","background","blue","green","red","fontFamilies","heading","body","borderSpace","GlobalStyle","createGlobalStyle","Component","styled","div","hasPillShape","StyledButton","Button","to","href","props","as","Link","Heading","h1","remSize","SpotifyContext","useSpotify","spotifyApi","SpotifyWebApi","clientId","SpotifyProvider","me","setMe","sotd","setSotd","getMe","getTrack","sotdId","Container","Form","form","Field","Admin","setSotdId","password","setPassword","history","useHistory","onSubmit","e","preventDefault","push","onChange","target","BackIcon","FaArrowLeft","HeadingWithBack","onClick","goBack","size","url","TextContainer","Text","Subtext","ImageBlock","text","subtext","Menu","album","images","artists","name","play","uris","uri","style","flex","PlayerContext","usePlayer","PlayerProvider","playerState","setPlayerState","progressState","setProgressState","intervalRef","useRef","useSpotifyWebPlaybackSdk","getOAuthToken","getAccessToken","onPlayerStateChanged","state","getMyCurrentPlayingTrack","item","type","progress_ms","is_playing","id","duration_ms","map","a","imageUrl","isPlaying","progress","duration","deviceId","player","isReady","transferMyPlayback","current","msToLength","ms","sec","minutes","Math","floor","restSec","toString","length","StyledPlayer","SmallContainer","StyledName","p","LyricsIcon","FaAlignCenter","HiddenElement","MiddleContainer","EvenlySpaced","ButtonsContainer","Player","progressSliderRef","volumeSliderRef","getRangeWidth","valueAsNumber","getVolume","volume","cursor","backgroundImage","height","width","minWidth","marginRight","join","ref","min","max","defaultValue","seek","parseFloat","skipToPrevious","pause","skipToNext","margin","setVolume","SearchContext","SearchProvider","searchQuery","setSearchQuery","openSearchView","useCallback","params","append","replace","pathname","delete","query","Wrapper","Input","input","SearchInput","placeholder","autoFocus","onFocus","Avatar","img","Topbar","avatarUrl","src","alt","main","Layout","gridColumn","gridRow","borderBottom","borderRight","borderTop","StyledListItem","Section","ArtistsText","DurationText","ListItem","index","undefined","artist","color","StyledList","List","items","showIndex","i","tracksToListItems","tracks","ArtistWrapper","TextWrapper","GenresText","Artist","artistInfo","setArtistInfo","setTracks","useParams","getArtist","genres","getArtistTopTracks","marginBottom","section","BlocksContainer","Home","topTrackImageUrl","setTopTrackImageUrl","topArtistImageUrl","setTopArtistImageUrl","getMyTopTracks","limit","time_range","getMyTopArtists","Date","getFullYear","Centered","Login","Lyrics","lyrics","setLyrics","source","CancelToken","artistsString","cancelToken","token","res","cancel","whiteSpace","Profile","disconnect","Search","artistItems","setArtistItems","trackItems","setTrackItems","searchArtists","searchTracks","Number","GridItem","StyledGrid","Grid","RadioButtons","currentValue","options","onButtonClick","className","TopArtists","setArtists","timeRange","setTimeRange","TopTracks","PrivateRoute","PublicOnlyRoute","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32c7fbcc.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, {\r\n  createContext,\r\n  FC,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n\r\ninterface ContextProps {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  expiresIn: number;\r\n  loading: boolean;\r\n  signOut: Function;\r\n}\r\n\r\nconst AuthContext = createContext({} as ContextProps);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nconst AuthProvider: FC = ({ children }) => {\r\n  const [accessToken, setAccessToken] = useState(\"\");\r\n  const [refreshToken, setRefreshToken] = useState(\"\");\r\n  const [expiresIn, setExpiresIn] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const location = useLocation();\r\n\r\n  function signOut() {\r\n    setAccessToken(\"\");\r\n    setRefreshToken(\"\");\r\n    setExpiresIn(0);\r\n    Cookies.remove(\"refresh-token\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const cookieRefreshToken = Cookies.get(\"refresh-token\");\r\n\r\n    if (!cookieRefreshToken) return setLoading(false);\r\n\r\n    axios\r\n      .post(\"api/v1/refresh\", {\r\n        refreshToken: cookieRefreshToken,\r\n      })\r\n      .then(({ data }) => {\r\n        setRefreshToken(cookieRefreshToken);\r\n        setAccessToken(data.accessToken);\r\n        setExpiresIn(data.expiresIn);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const code = params.get(\"code\");\r\n\r\n    if (!code || accessToken) return;\r\n\r\n    setLoading(true);\r\n\r\n    axios\r\n      .post(\"api/v1/login\", { code })\r\n      .then(({ data }) => {\r\n        setAccessToken(data.accessToken);\r\n        setRefreshToken(data.refreshToken);\r\n        setExpiresIn(data.expiresIn);\r\n\r\n        Cookies.set(\"refresh-token\", data.refreshToken, { expires: 7 });\r\n\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, [location.search, accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!refreshToken || !expiresIn) return;\r\n\r\n    const interval = setInterval(() => {\r\n      axios\r\n        .post(\"api/v1/refresh\", { refreshToken })\r\n        .then(({ data }) => {\r\n          setAccessToken(data.accessToken);\r\n          setExpiresIn(data.expiresIn);\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }, (expiresIn - 60) * 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refreshToken, expiresIn]);\r\n\r\n  const value = {\r\n    accessToken,\r\n    refreshToken,\r\n    expiresIn,\r\n    loading,\r\n    signOut,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthProvider;\r\n","export const colors = {\r\n  black: \"#000000\",\r\n  white: \"#FFFFFF\",\r\n  primary: \"#E7F4B2\",\r\n  background: \"#2E3DC6\",\r\n  blue: \"#B2F4F4\",\r\n  green: \"#B2F4B9\",\r\n  red: \"#F4B2B2\",\r\n};\r\n\r\nexport const fontFamilies = {\r\n  heading: \"'Poppins', sans-serif\",\r\n  body: \"'Poppins', sans-serif\",\r\n};\r\n\r\nexport const borderPadding = \"2rem\";\r\n\r\nconst theme = {\r\n  colors,\r\n  fontFamilies,\r\n  borderSpace: borderPadding,\r\n};\r\n\r\nexport default theme;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap');\r\n\r\n  * {\r\n    font-family: ${() => theme.fontFamilies.body};\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  html, body, #root {\r\n    height: 100vh;\r\n  }\r\n\r\n  body {\r\n    background: ${() => theme.colors.background};\r\n    color: ${() => theme.colors.primary};\r\n  }\r\n\r\n  h1,h2,h3,h4,h5,h6 {\r\n    font-family: ${() => theme.fontFamilies.heading};\r\n\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\n\r\nexport interface ComponentProps extends HTMLAttributes<HTMLElement> {\r\n  hasPillShape?: boolean;\r\n}\r\n\r\nconst Component = styled.div<ComponentProps>`\r\n  border-radius: ${({ hasPillShape }) => (hasPillShape ? \"999px\" : \"8px\")};\r\n  background: ${() => theme.colors.primary};\r\n  background-size: cover;\r\n  background-position: center;\r\n  border: 1px solid ${() => theme.colors.black};\r\n  box-shadow: 4px 4px 0 ${() => theme.colors.black};\r\n  color: ${() => theme.colors.black};\r\n`;\r\n\r\nexport default Component;\r\n","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Component, { ComponentProps } from \"./Component\";\r\n\r\nexport interface ButtonProps extends ComponentProps {\r\n  to?: string;\r\n  href?: string;\r\n  target?: string;\r\n  active?: boolean;\r\n}\r\n\r\nconst StyledButton = styled(Component)`\r\n  padding: 0.3em 1em;\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n  text-align: left;\r\n  cursor: pointer;\r\n\r\n  &:active,\r\n  .active {\r\n    box-shadow: none;\r\n    transform: translate(4px, 4px);\r\n  }\r\n`;\r\n\r\nconst Button: FC<ButtonProps> = ({ children, to, href, ...props }) => {\r\n  if (to)\r\n    return (\r\n      <StyledButton as={Link} to={to} {...props}>\r\n        {children}\r\n      </StyledButton>\r\n    );\r\n\r\n  if (href)\r\n    return (\r\n      <StyledButton as=\"a\" href={href} {...props}>\r\n        {children}\r\n      </StyledButton>\r\n    );\r\n\r\n  return (\r\n    <StyledButton as=\"button\" {...props}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst Heading = styled.h1<{ remSize?: number }>`\r\n  font-size: ${({ remSize }) => (remSize ? `${remSize}rem` : \"3rem\")};\r\n  text-shadow: 0.1em 0.1em ${() => theme.colors.black};\r\n  -webkit-text-stroke: 1px ${() => theme.colors.black};\r\n`;\r\n\r\nexport default Heading;\r\n","import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport { useAuth } from \"./AuthProvider\";\r\n\r\ninterface ContextProps {\r\n  readonly spotifyApi: SpotifyWebApi;\r\n  me?: SpotifyApi.CurrentUsersProfileResponse;\r\n  sotd?: SpotifyApi.SingleTrackResponse;\r\n  setSotd: Function;\r\n}\r\n\r\nconst SpotifyContext = createContext({} as ContextProps);\r\n\r\nexport const useSpotify = () => useContext(SpotifyContext);\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"51fe8697736c45858e634df10a31832b\",\r\n});\r\n\r\nconst SpotifyProvider: FC = ({ children }) => {\r\n  const [me, setMe] = useState<SpotifyApi.CurrentUsersProfileResponse>();\r\n  const [sotd, setSotd] = useState<SpotifyApi.SingleTrackResponse>();\r\n  const { accessToken } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n\r\n    spotifyApi.setAccessToken(accessToken);\r\n\r\n    spotifyApi.getMe().then((data) => {\r\n      setMe(data.body);\r\n    });\r\n\r\n    axios.get(\"api/v1/sotdId\").then(({ data }) => {\r\n      spotifyApi.getTrack(data.sotdId).then((data) => {\r\n        setSotd(data.body);\r\n      });\r\n    });\r\n  }, [accessToken]);\r\n\r\n  const value = { spotifyApi, me, sotd, setSotd };\r\n\r\n  return (\r\n    <SpotifyContext.Provider value={value}>{children}</SpotifyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SpotifyProvider;\r\n","import axios from \"axios\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/Button\";\r\nimport Heading from \"../components/Heading\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\n\r\nconst Container = styled.div`\r\n  padding: 2rem;\r\n  > * {\r\n    margin-bottom: 2rem;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  > * {\r\n    margin-bottom: 2rem;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Field = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  label {\r\n    margin-bottom: 0.1rem;\r\n  }\r\n`;\r\n\r\nconst Admin = () => {\r\n  const [sotdId, setSotdId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { spotifyApi, setSotd } = useSpotify();\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"api/v1/sotdId\", { sotdId, password })\r\n      .then(({ data }) => {\r\n        const { sotdId } = data;\r\n        spotifyApi.getTrack(sotdId).then((data: any) => {\r\n          setSotd(data.body);\r\n          history.push(\"/\");\r\n        });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Heading>Admin Panel</Heading>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Field>\r\n          <label>Song of the day ID</label>\r\n          <input value={sotdId} onChange={(e) => setSotdId(e.target.value)} />\r\n        </Field>\r\n        <Field>\r\n          <label>Admin Panel Password</label>\r\n          <input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Field>\r\n        <Button>Proceed</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import { FC, HTMLAttributes } from \"react\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Heading from \"./Heading\";\r\n\r\ninterface Props extends HTMLAttributes<HTMLElement> {}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BackIcon = styled(FaArrowLeft)`\r\n  margin-right: 1.5rem;\r\n`;\r\n\r\nconst HeadingWithBack: FC<Props> = ({ children, ...props }) => {\r\n  const history = useHistory();\r\n\r\n  function goBack() {\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <Container onClick={goBack} {...props}>\r\n      <BackIcon size={24} />\r\n      <Heading>{children}</Heading>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HeadingWithBack;\r\n","import { FC, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Component from \"./Component\";\r\nimport Button, { ButtonProps } from \"./Button\";\r\nimport theme from \"../styles/theme\";\r\n\r\ninterface Props extends ButtonProps {\r\n  url: string;\r\n  text: string;\r\n  subtext?: string;\r\n}\r\n\r\nconst Container = styled(Button)<{ url: string }>`\r\n  position: relative;\r\n  background-image: url(${({ url }) => url});\r\n  min-width: 100px;\r\n  min-height: 100px;\r\n`;\r\n\r\nconst TextContainer = styled(Component)`\r\n  position: absolute;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  background: ${() => theme.colors.black};\r\n  color: ${() => theme.colors.primary};\r\n  padding: 0.3em 1em;\r\n  box-shadow: none;\r\n`;\r\n\r\nconst Text = styled.div<{ size: \"sm\" | \"lg\" }>`\r\n  font-size: ${({ size = \"sm\" }) => {\r\n    switch (size) {\r\n      case \"sm\":\r\n        return \"inherit\";\r\n      case \"lg\":\r\n        return \"2rem\";\r\n    }\r\n  }};\r\n`;\r\n\r\nconst Subtext = styled.div`\r\n  font-weight: normal;\r\n  font-size: 1rem;\r\n  margin-top: 0.2rem;\r\n`;\r\n\r\nconst ImageBlock: FC<Props> = ({ url, text, subtext, ...props }) => {\r\n  return (\r\n    <Container url={url} {...props}>\r\n      <TextContainer>\r\n        <Text size={subtext ? \"sm\" : \"lg\"}>{text}</Text>\r\n        {subtext && <Subtext>{subtext}</Subtext>}\r\n      </TextContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ImageBlock;\r\n","import { useEffect, useState } from \"react\";\r\nimport { FC, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport theme from \"../styles/theme\";\r\nimport Button from \"./Button\";\r\nimport ImageBlock from \"./ImageBlock\";\r\n\r\ninterface Props extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${() => theme.borderSpace};\r\n\r\n  > * {\r\n    margin-bottom: 2rem;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Menu: FC<Props> = ({ ...props }) => {\r\n  // const [sotd, setSotd] = useState<SpotifyApi.SingleTrackResponse>();\r\n  const { spotifyApi, sotd } = useSpotify();\r\n\r\n  return (\r\n    <Container {...props}>\r\n      <Button to=\"/\">Home</Button>\r\n      <Button to=\"/top-artists\">Your top artists</Button>\r\n      <Button to=\"/top-tracks\">Your top tracks</Button>\r\n      {sotd && (\r\n        <ImageBlock\r\n          url={sotd.album.images[0].url}\r\n          text=\"Song of the day\"\r\n          subtext={`${sotd.artists[0].name} - ${sotd.name}`}\r\n          onClick={() => {\r\n            spotifyApi.play({ uris: [sotd.uri] });\r\n          }}\r\n          style={{ flex: 1 }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport { FC } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n// @ts-ignore\r\nimport { useSpotifyWebPlaybackSdk } from \"use-spotify-web-playback-sdk\";\r\nimport { useAuth } from \"./AuthProvider\";\r\nimport { useSpotify } from \"./SpotifyProvider\";\r\n\r\ninterface PlayerStateProps {\r\n  id: string;\r\n  name: string;\r\n  artists: string[];\r\n  imageUrl: string;\r\n  isPlaying: boolean;\r\n}\r\n\r\ninterface ProgressStateProps {\r\n  progress: number;\r\n  duration: number;\r\n}\r\n\r\ninterface ContextProps {\r\n  playerState?: PlayerStateProps;\r\n  progressState?: ProgressStateProps;\r\n  player: any;\r\n}\r\n\r\nconst PlayerContext = createContext({} as ContextProps);\r\n\r\nexport const usePlayer = () => useContext(PlayerContext);\r\n\r\nconst PlayerProvider: FC = ({ children }) => {\r\n  const [playerState, setPlayerState] = useState<PlayerStateProps>();\r\n  const [progressState, setProgressState] = useState<ProgressStateProps>();\r\n  const { spotifyApi } = useSpotify();\r\n  const intervalRef = useRef<any>(null);\r\n\r\n  const {\r\n    deviceId,\r\n    player, // https://developer.spotify.com/documentation/web-playback-sdk/reference/#api-spotify-player\r\n    isReady,\r\n  } = useSpotifyWebPlaybackSdk({\r\n    name: \"Extension for Spotify (Browser)\",\r\n    getOAuthToken: () => spotifyApi.getAccessToken(),\r\n    onPlayerStateChanged: (state: any) => {\r\n      spotifyApi.getMyCurrentPlayingTrack().then((data) => {\r\n        if (\r\n          !state ||\r\n          !data.body ||\r\n          !data.body.item ||\r\n          data.body.item.type !== \"track\"\r\n        )\r\n          return;\r\n\r\n        const { progress_ms, is_playing } = data.body;\r\n        const { id, name, artists, album, duration_ms } = data.body.item;\r\n\r\n        if (playerState?.id !== id)\r\n          setPlayerState({\r\n            id,\r\n            name,\r\n            artists: artists.map((a) => a.name),\r\n            imageUrl: album.images[1].url,\r\n            isPlaying: is_playing,\r\n          });\r\n\r\n        setProgressState({\r\n          progress: progress_ms || 0,\r\n          duration: duration_ms,\r\n        });\r\n      });\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isReady || !deviceId) return;\r\n\r\n    spotifyApi.transferMyPlayback([deviceId]);\r\n  }, [isReady, deviceId, spotifyApi]);\r\n\r\n  useEffect(() => {\r\n    if (!progressState || !playerState || !playerState.isPlaying) return;\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      setProgressState({\r\n        ...progressState,\r\n        progress: progressState.progress + 1000,\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    };\r\n  }, [playerState, progressState, setProgressState]);\r\n\r\n  const value = { playerState, progressState, player };\r\n\r\n  return (\r\n    <PlayerContext.Provider value={value}>{children}</PlayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlayerProvider;\r\n","export function msToLength(ms: number): string {\r\n  const sec = ms / 1000;\r\n  const minutes = Math.floor(sec / 60);\r\n  let restSec = Math.floor(sec % 60).toString();\r\n  if (restSec.length <= 1) restSec = `0${restSec}`;\r\n\r\n  return `${minutes}:${restSec}`;\r\n}\r\n","import React, {\r\n  MutableRefObject,\r\n  useEffect,\r\n  useRef,\r\n  FC,\r\n  HTMLAttributes,\r\n} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FaChevronLeft,\r\n  FaChevronRight,\r\n  FaPlay,\r\n  FaPause,\r\n  FaVolumeUp,\r\n  FaAlignCenter,\r\n} from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport styled from \"styled-components\";\r\n// @ts-ignore\r\nimport { useSpotifyWebPlaybackSdk } from \"use-spotify-web-playback-sdk\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { usePlayer } from \"../providers/PlayerProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport theme from \"../styles/theme\";\r\nimport { initSpotifyPlayer } from \"../utils/initSpotifyPlayer\";\r\nimport { msToLength } from \"../utils/msToLength\";\r\nimport Component from \"./Component\";\r\n\r\ninterface Props extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nconst Container = styled.div`\r\n  padding: ${() => theme.borderSpace};\r\n`;\r\n\r\nconst StyledPlayer = styled(Component)`\r\n  position: relative;\r\n  height: 100%;\r\n  padding: 1rem 3rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst SmallContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 30%;\r\n`;\r\n\r\nconst StyledName = styled.p`\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst LyricsIcon = styled(FaAlignCenter)`\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst HiddenElement = styled.div`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nconst MiddleContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 30%;\r\n`;\r\n\r\nconst EvenlySpaced = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: -0.25rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  margin-top: 0.75rem;\r\n\r\n  > * {\r\n    margin-right: 1rem;\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Player: FC<Props> = ({ ...props }) => {\r\n  const progressSliderRef = useRef<HTMLInputElement>(null);\r\n  const volumeSliderRef = useRef<HTMLInputElement>(null);\r\n  const { spotifyApi } = useSpotify();\r\n  const { playerState, progressState, player } = usePlayer();\r\n\r\n  function getRangeWidth(progress: number, duration: number) {\r\n    return (progress / duration) * 100;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!progressSliderRef.current || !progressState) return;\r\n\r\n    progressSliderRef.current.valueAsNumber = getRangeWidth(\r\n      progressState.progress,\r\n      progressState.duration\r\n    );\r\n\r\n    player.getVolume().then((volume: number) => {\r\n      if (!volumeSliderRef.current) return;\r\n\r\n      volumeSliderRef.current.valueAsNumber = volume * 100;\r\n    });\r\n  }, [progressState, player]);\r\n\r\n  return (\r\n    <Container {...props}>\r\n      <IconContext.Provider\r\n        value={{ size: \"20px\", style: { cursor: \"pointer\" } }}\r\n      >\r\n        {playerState && progressState && (\r\n          <StyledPlayer hasPillShape={true}>\r\n            <SmallContainer>\r\n              <Component\r\n                style={{\r\n                  backgroundImage: `url(${playerState.imageUrl})`,\r\n                  height: 64,\r\n                  width: 64,\r\n                  minWidth: 64,\r\n                  marginRight: \"1.25rem\",\r\n                }}\r\n              />\r\n              <HiddenElement>\r\n                <StyledName>\r\n                  <Link to=\"/lyrics\">\r\n                    <LyricsIcon />\r\n                  </Link>{\" \"}\r\n                  {playerState.name}\r\n                </StyledName>\r\n                <HiddenElement>{playerState.artists.join(\", \")}</HiddenElement>\r\n              </HiddenElement>\r\n            </SmallContainer>\r\n            <MiddleContainer>\r\n              <EvenlySpaced style={{ width: \"100%\" }}>\r\n                <p>{msToLength(progressState.progress || 0)}</p>\r\n                <p>{msToLength(progressState.duration)}</p>\r\n              </EvenlySpaced>\r\n              <input\r\n                ref={progressSliderRef}\r\n                type=\"range\"\r\n                min={0}\r\n                max={100}\r\n                defaultValue={getRangeWidth(\r\n                  progressState.progress,\r\n                  progressState.duration\r\n                )}\r\n                onChange={(e) =>\r\n                  player.seek(\r\n                    progressState.duration * (parseFloat(e.target.value) / 100)\r\n                  )\r\n                }\r\n                style={{ width: \"100%\" }}\r\n              />\r\n              <ButtonsContainer>\r\n                <FaChevronLeft onClick={() => spotifyApi.skipToPrevious()} />\r\n                {playerState.isPlaying ? (\r\n                  <FaPause onClick={() => spotifyApi.pause()} />\r\n                ) : (\r\n                  <FaPlay onClick={() => spotifyApi.play()} />\r\n                )}\r\n                <FaChevronRight onClick={() => spotifyApi.skipToNext()} />\r\n              </ButtonsContainer>\r\n            </MiddleContainer>\r\n            <SmallContainer>\r\n              <FaVolumeUp\r\n                style={{ margin: \"0 1.25rem 0 auto\", cursor: \"default\" }}\r\n              />\r\n              <input\r\n                ref={volumeSliderRef}\r\n                type=\"range\"\r\n                min={0}\r\n                max={100}\r\n                onChange={(e) =>\r\n                  player.setVolume(parseFloat(e.target.value) / 100)\r\n                }\r\n              />\r\n            </SmallContainer>\r\n          </StyledPlayer>\r\n        )}\r\n      </IconContext.Provider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FC, useContext, createContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\ninterface ContextProps {\r\n  searchQuery: string;\r\n  setSearchQuery: Function;\r\n  openSearchView: Function;\r\n}\r\n\r\nconst SearchContext = createContext({} as ContextProps);\r\n\r\nexport const useSearch = () => useContext(SearchContext);\r\n\r\nconst SearchProvider: FC = ({ children }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const openSearchView = useCallback(() => {\r\n    // set url with search query\r\n    const params = new URLSearchParams();\r\n\r\n    if (searchQuery) {\r\n      params.append(\"query\", searchQuery);\r\n      history.replace({ pathname: \"/search\", search: params.toString() });\r\n    } else {\r\n      params.delete(\"query\");\r\n      if (location.pathname === \"/search\")\r\n        history.replace({ pathname: \"/search\", search: params.toString() });\r\n    }\r\n  }, [history, searchQuery]);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const query = params.get(\"query\");\r\n\r\n    if (query) setSearchQuery(query);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    openSearchView();\r\n  }, [searchQuery, openSearchView]);\r\n\r\n  const value = { searchQuery, setSearchQuery, openSearchView };\r\n\r\n  return (\r\n    <SearchContext.Provider value={value}>{children}</SearchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SearchProvider;\r\n","import { FC, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport theme from \"../styles/theme\";\r\nimport Component from \"./Component\";\r\nimport { useSearch } from \"../providers/SearchProvider\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\ninterface Props extends HTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Wrapper = styled(Component)`\r\n  display: flex;\r\n  align-items: center;\r\n  background: ${() => theme.colors.white};\r\n  padding: 0.3rem 1.5rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-size: inherit;\r\n  outline: none;\r\n  border: none;\r\n  margin-left: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchInput: FC<Props> = ({ ...props }) => {\r\n  const { searchQuery, setSearchQuery, openSearchView } = useSearch();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Wrapper hasPillShape={true} {...props}>\r\n      <FaSearch />\r\n      <Input\r\n        placeholder=\"Search for Songs, Artists\"\r\n        value={searchQuery}\r\n        autoFocus={location.pathname === \"/search\"}\r\n        onFocus={() => openSearchView()}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useEffect, useState } from \"react\";\r\nimport { FC, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport theme from \"../styles/theme\";\r\nimport Button from \"./Button\";\r\nimport SearchInput from \"./SearchInput\";\r\n\r\ninterface Props extends HTMLAttributes<HTMLDivElement> {}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding: ${() => theme.borderSpace};\r\n  font-size: 1.25rem;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border-radius: 2rem;\r\n  vertical-align: middle;\r\n  object-fit: cover;\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst Topbar: FC<Props> = ({ ...props }) => {\r\n  const { me } = useSpotify();\r\n  const avatarUrl = me && me.images && me.images[me.images.length - 1].url;\r\n\r\n  return (\r\n    <Container {...props}>\r\n      <SearchInput style={{ flex: 1, marginRight: \"2rem\" }} />\r\n      <Button hasPillShape={true} to=\"/my-profile\">\r\n        <Avatar src={avatarUrl} alt=\"Avatar\" />\r\n        Your profile\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\nimport Menu from \"./Menu\";\r\nimport Player from \"./Player\";\r\nimport Topbar from \"./Topbar\";\r\n\r\nconst Container = styled.main`\r\n  display: grid;\r\n  grid-template-columns: 360px 3fr;\r\n  grid-template-rows: max-content 1fr max-content;\r\n  height: 100%;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  grid-column: 2/3;\r\n  grid-row: 2/3;\r\n  padding: ${() => theme.borderSpace};\r\n  overflow: hidden auto;\r\n`;\r\n\r\nconst Layout: FC = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Topbar\r\n        style={{\r\n          gridColumn: \"2/3\",\r\n          gridRow: \"1/2\",\r\n          borderBottom: `1px solid ${theme.colors.black}`,\r\n        }}\r\n      />\r\n      <Menu\r\n        style={{\r\n          gridColumn: \"1/2\",\r\n          gridRow: \"1/3\",\r\n          borderRight: `1px solid ${theme.colors.black}`,\r\n        }}\r\n      />\r\n      <Player\r\n        style={{\r\n          gridColumn: \"1/3\",\r\n          gridRow: \"3/4\",\r\n          borderTop: `1px solid ${theme.colors.black}`,\r\n        }}\r\n      />\r\n      <Wrapper>{children}</Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport theme from \"../styles/theme\";\r\nimport Button from \"./Button\";\r\nimport Component from \"./Component\";\r\nimport Heading from \"./Heading\";\r\nimport { msToLength } from \"../utils/msToLength\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\n\r\nexport interface ItemProps {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  artists?: Array<SpotifyApi.ArtistObjectSimplified>;\r\n  imageUrl: string;\r\n  uri?: string;\r\n  duration?: number;\r\n  index?: number;\r\n}\r\n\r\nconst StyledListItem = styled(Button)`\r\n  padding: 0.6rem 1.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: ${theme.colors.primary};\r\n`;\r\n\r\nconst Section = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  > * {\r\n    margin-right: 1.5rem;\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArtistsText = styled.p`\r\n  font-weight: bold;\r\n  color: ${theme.colors.black};\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst DurationText = styled.p`\r\n  font-weight: bold;\r\n  color: ${theme.colors.black};\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst ListItem: FC<ItemProps> = ({\r\n  id,\r\n  name,\r\n  type,\r\n  artists,\r\n  imageUrl,\r\n  uri,\r\n  duration,\r\n  index,\r\n}) => {\r\n  const history = useHistory();\r\n  const { spotifyApi } = useSpotify();\r\n\r\n  function handleClick() {\r\n    if (type === \"track\" && uri) {\r\n      spotifyApi.play({ uris: [uri] });\r\n    } else if (type === \"artist\") {\r\n      history.push(`/artist/${id}`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledListItem onClick={handleClick}>\r\n      <Section>\r\n        {index !== undefined && <Heading remSize={2}>{index + 1}</Heading>}\r\n        <Component\r\n          style={{\r\n            backgroundImage: `url(${imageUrl})`,\r\n            height: 48,\r\n            width: 48,\r\n          }}\r\n          hasPillShape={type !== \"track\"}\r\n        />\r\n        <div>\r\n          <Heading remSize={1.5}>{name}</Heading>\r\n          {artists && (\r\n            <ArtistsText>\r\n              {artists.map((artist) => artist.name).join(\", \")}\r\n            </ArtistsText>\r\n          )}\r\n        </div>\r\n      </Section>\r\n      {type === \"track\" && (\r\n        <Section>\r\n          {duration && <DurationText>{msToLength(duration)}</DurationText>}\r\n          <FaPlay color={theme.colors.black} />\r\n        </Section>\r\n      )}\r\n    </StyledListItem>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ListItem, { ItemProps } from \"./ListItem\";\r\n\r\ninterface Props {\r\n  items: Array<ItemProps>;\r\n  showIndex?: boolean;\r\n}\r\n\r\nconst StyledList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  > * {\r\n    margin-bottom: 2rem;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst List: FC<Props> = ({ items, showIndex = true }) => {\r\n  return (\r\n    <StyledList>\r\n      {items.map((item, i) => (\r\n        <ListItem key={item.id} {...item} index={showIndex ? i : undefined} />\r\n      ))}\r\n    </StyledList>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","export default function tracksToListItems(\r\n  tracks: Array<SpotifyApi.TrackObjectFull>\r\n) {\r\n  return tracks.map(({ id, name, type, artists, album, uri, duration_ms }) => ({\r\n    id,\r\n    name,\r\n    type,\r\n    artists,\r\n    imageUrl: album.images[album.images.length - 1].url,\r\n    uri,\r\n    duration: duration_ms,\r\n  }));\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Component from \"../components/Component\";\r\nimport Heading from \"../components/Heading\";\r\nimport HeadingWithBack from \"../components/HeadingWithBack\";\r\nimport Layout from \"../components/Layout\";\r\nimport List from \"../components/List\";\r\nimport { ItemProps } from \"../components/ListItem\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport theme from \"../styles/theme\";\r\nimport tracksToListItems from \"../utils/tracksToListItems\";\r\n\r\ninterface ArtistInfo {\r\n  name: string;\r\n  genres: string[];\r\n  imageUrl: string;\r\n}\r\n\r\nconst ArtistWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Avatar = styled(Component)`\r\n  width: 200px;\r\n  height: 200px;\r\n  margin-right: 2rem;\r\n`;\r\n\r\nconst GenresText = styled.p`\r\n  font-weight: bold;\r\n  color: ${theme.colors.white};\r\n  font-size: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst Artist = () => {\r\n  const [artistInfo, setArtistInfo] = useState<ArtistInfo>();\r\n  const [tracks, setTracks] = useState<Array<ItemProps>>([]);\r\n  const { id } = useParams<{ id: string }>();\r\n  const { spotifyApi } = useSpotify();\r\n\r\n  useEffect(() => {\r\n    spotifyApi.getArtist(id).then((data) => {\r\n      setArtistInfo({\r\n        name: data.body.name,\r\n        genres: data.body.genres,\r\n        imageUrl: data.body.images.length ? data.body.images[0].url : \"\",\r\n      });\r\n    });\r\n    spotifyApi.getArtistTopTracks(id, \"GB\").then((data) => {\r\n      setTracks(tracksToListItems(data.body.tracks));\r\n    });\r\n  }, [spotifyApi, id]);\r\n\r\n  return (\r\n    <Layout>\r\n      <HeadingWithBack style={{ marginBottom: \"2rem\" }}>Artist</HeadingWithBack>\r\n      {artistInfo && (\r\n        <ArtistWrapper style={{ marginBottom: \"4rem\" }}>\r\n          <Avatar\r\n            hasPillShape={true}\r\n            style={{\r\n              backgroundImage: `url(${artistInfo.imageUrl})`,\r\n            }}\r\n          />\r\n          <TextWrapper>\r\n            <Heading>{artistInfo.name}</Heading>\r\n            <GenresText>\r\n              {artistInfo && artistInfo.genres.join(\", \")}\r\n            </GenresText>\r\n          </TextWrapper>\r\n        </ArtistWrapper>\r\n      )}\r\n\r\n      <Heading remSize={2} style={{ marginBottom: \"2rem\" }}>\r\n        Popular tracks\r\n      </Heading>\r\n      <List items={tracks} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Artist;\r\n","import styled from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst Text = styled.p`\r\n  color: ${() => theme.colors.white};\r\n`;\r\n\r\nexport default Text;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/Button\";\r\nimport Heading from \"../components/Heading\";\r\nimport ImageBlock from \"../components/ImageBlock\";\r\nimport Layout from \"../components/Layout\";\r\nimport Text from \"../components/Text\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 6rem;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  > * {\r\n    margin-bottom: 1rem;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BlocksContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-auto-rows: 250px;\r\n  gap: 2rem;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  > * {\r\n    margin-right: 1rem;\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  const [topTrackImageUrl, setTopTrackImageUrl] = useState(\"\");\r\n  const [topArtistImageUrl, setTopArtistImageUrl] = useState(\"\");\r\n  const { spotifyApi } = useSpotify();\r\n\r\n  useEffect(() => {\r\n    spotifyApi\r\n      .getMyTopTracks({ limit: 1, time_range: \"short_term\" })\r\n      .then((data) =>\r\n        setTopTrackImageUrl(data.body.items[0].album.images[0].url)\r\n      );\r\n\r\n    spotifyApi\r\n      .getMyTopArtists({ limit: 1, time_range: \"short_term\" })\r\n      .then((data) => setTopArtistImageUrl(data.body.items[0].images[0].url));\r\n  }, [spotifyApi]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Section>\r\n        <Heading>Extension for Spotify</Heading>\r\n        <BlocksContainer>\r\n          <ImageBlock\r\n            url={topArtistImageUrl}\r\n            text=\"Your top artists\"\r\n            to=\"/top-artists\"\r\n          />\r\n          <ImageBlock\r\n            url={topTrackImageUrl}\r\n            text=\"Your top tracks\"\r\n            to=\"/top-tracks\"\r\n          />\r\n        </BlocksContainer>\r\n      </Section>\r\n      <Section>\r\n        <Heading>Some links</Heading>\r\n        <ButtonsContainer>\r\n          <Button href=\"https://github.com\" target=\"_blank\">\r\n            Source code\r\n          </Button>\r\n          <Button\r\n            href=\"mailto:boryskac10@gmail.com\"\r\n            style={{ background: theme.colors.blue }}\r\n          >\r\n            E-mail\r\n          </Button>\r\n          <Button\r\n            href=\"https://open.spotify.com/user/ynbx97gvj0yplrg62v0esozxp?si=77273d759c594a26\"\r\n            target=\"_blank\"\r\n            style={{ background: theme.colors.green }}\r\n          >\r\n            My Spotify\r\n          </Button>\r\n        </ButtonsContainer>\r\n      </Section>\r\n      <Section>\r\n        <Text>&copy; {new Date().getFullYear()}, Borys</Text>\r\n      </Section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../components/Button\";\r\nimport Heading from \"../components/Heading\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst AUTH_URL =\r\n  \"https://accounts.spotify.com/authorize?\" +\r\n  \"response_type=code&\" +\r\n  \"client_id=51fe8697736c45858e634df10a31832b&\" +\r\n  \"redirect_uri=http://localhost:3000&\" +\r\n  \"scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20user-top-read\";\r\n\r\nconst Centered = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Login = () => {\r\n  return (\r\n    <Centered>\r\n      <Wrapper>\r\n        <Heading style={{ marginBottom: \"2rem\" }}>\r\n          Extension for Spotify\r\n        </Heading>\r\n        <Button href={AUTH_URL} style={{ background: theme.colors.green }}>\r\n          Login with Spotify\r\n        </Button>\r\n      </Wrapper>\r\n    </Centered>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\r\n// @ts-ignore\r\nimport lyricsFinder from \"lyrics-finder\";\r\nimport HeadingWithBack from \"../components/HeadingWithBack\";\r\nimport Layout from \"../components/Layout\";\r\nimport Text from \"../components/Text\";\r\nimport { usePlayer } from \"../providers/PlayerProvider\";\r\nimport axios from \"axios\";\r\nimport Heading from \"../components/Heading\";\r\n\r\nconst Lyrics = () => {\r\n  const [lyrics, setLyrics] = useState(\"Loading...\");\r\n  const { playerState } = usePlayer();\r\n\r\n  useEffect(() => {\r\n    const cancelToken = axios.CancelToken;\r\n    const source = cancelToken.source();\r\n\r\n    (async () => {\r\n      if (!playerState) return;\r\n\r\n      setLyrics(\"Loading...\");\r\n\r\n      const { name, artists } = playerState;\r\n      const artistsString = artists.join(\", \");\r\n      const res = await axios.post(\"api/v1/lyrics\", {\r\n        artists: artistsString,\r\n        name,\r\n        cancelToken: source.token,\r\n      });\r\n\r\n      setLyrics(\r\n        res.data.lyrics || `Not Found for \"${artistsString} - ${name}\"`\r\n      );\r\n    })();\r\n\r\n    return () => {\r\n      source.cancel(\"cancelled\");\r\n    };\r\n  }, [playerState]);\r\n\r\n  return (\r\n    <Layout>\r\n      {playerState && (\r\n        <>\r\n          <HeadingWithBack style={{ marginBottom: \"2rem\" }}>\r\n            Current Lyrics\r\n          </HeadingWithBack>\r\n          <Heading remSize={1.5} style={{ marginBottom: \"2rem\" }}>\r\n            {playerState.artists.join(\", \")} - {playerState.name}\r\n          </Heading>\r\n          <Text style={{ whiteSpace: \"pre-wrap\" }}>{lyrics}</Text>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Lyrics;\r\n","import Button from \"../components/Button\";\r\nimport HeadingWithBack from \"../components/HeadingWithBack\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { usePlayer } from \"../providers/PlayerProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst Profile = () => {\r\n  const { signOut } = useAuth();\r\n  const { player } = usePlayer();\r\n\r\n  return (\r\n    <Layout>\r\n      <HeadingWithBack style={{ marginBottom: \"2rem\" }}>\r\n        My Profile\r\n      </HeadingWithBack>\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            player.disconnect();\r\n            signOut();\r\n          }}\r\n          style={{ background: theme.colors.red }}\r\n        >\r\n          Sign out\r\n        </Button>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Button from \"../components/Button\";\r\nimport Heading from \"../components/Heading\";\r\nimport HeadingWithBack from \"../components/HeadingWithBack\";\r\nimport Layout from \"../components/Layout\";\r\nimport List from \"../components/List\";\r\nimport { ItemProps } from \"../components/ListItem\";\r\nimport Text from \"../components/Text\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport tracksToListItems from \"../utils/tracksToListItems\";\r\n\r\nconst Search = () => {\r\n  const [artistItems, setArtistItems] = useState<ItemProps[]>([]);\r\n  const [trackItems, setTrackItems] = useState<ItemProps[]>([]);\r\n  const location = useLocation();\r\n  const { spotifyApi } = useSpotify();\r\n  const artistsLimit = 3,\r\n    tracksLimit = 20;\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const query = params.get(\"query\");\r\n\r\n    if (!query) {\r\n      setArtistItems([]);\r\n      setTrackItems([]);\r\n      return;\r\n    }\r\n\r\n    spotifyApi.searchArtists(query, { limit: artistsLimit }).then((data) => {\r\n      const { artists } = data.body;\r\n\r\n      if (!artists) return;\r\n\r\n      setArtistItems(\r\n        artists.items.map(({ id, name, type, images }) => ({\r\n          id,\r\n          name,\r\n          type,\r\n          imageUrl: images.length ? images[images.length - 1].url : \"\",\r\n        }))\r\n      );\r\n    });\r\n\r\n    spotifyApi.searchTracks(query, { limit: tracksLimit }).then((data) => {\r\n      const { tracks } = data.body;\r\n\r\n      if (!tracks) return;\r\n\r\n      setTrackItems(tracksToListItems(tracks.items));\r\n    });\r\n  }, [spotifyApi, location.search]);\r\n\r\n  return (\r\n    <Layout>\r\n      <HeadingWithBack style={{ marginBottom: \"2rem\" }}>Search</HeadingWithBack>\r\n      <Heading remSize={2} style={{ marginBottom: \"1rem\" }}>\r\n        Artists\r\n      </Heading>\r\n      {artistItems.length ? (\r\n        <List items={artistItems} showIndex={false} />\r\n      ) : (\r\n        <Text>No results</Text>\r\n      )}\r\n      <Heading remSize={2} style={{ margin: \"2rem 0 1rem\" }}>\r\n        Tracks\r\n      </Heading>\r\n      {trackItems.length ? (\r\n        <List items={trackItems} />\r\n      ) : (\r\n        <Text>No results</Text>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../styles/theme\";\r\nimport Button from \"./Button\";\r\nimport Component from \"./Component\";\r\nimport Heading from \"./Heading\";\r\n\r\nexport interface ItemProps {\r\n  id: string;\r\n  name: string;\r\n  imageUrl: string;\r\n  index: number;\r\n}\r\n\r\nconst Container = styled(Button)`\r\n  position: relative;\r\n  color: ${theme.colors.primary};\r\n  padding: 1.5rem;\r\n`;\r\n\r\nconst Number = styled(Heading)`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 1.5rem;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Avatar = styled(Component)`\r\n  aspect-ratio: 1/1;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst GridItem: FC<ItemProps> = ({ id, name, imageUrl, index }) => {\r\n  return (\r\n    <Container to={`/artist/${id}`}>\r\n      <Number remSize={4.5}>{index + 1}</Number>\r\n      <Avatar\r\n        hasPillShape={true}\r\n        style={{ backgroundImage: `url(${imageUrl})` }}\r\n      />\r\n      <Heading remSize={2}>{name}</Heading>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GridItem;\r\n","import { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GridItem, { ItemProps } from \"./GridItem\";\r\n\r\ninterface Props {\r\n  items: Array<ItemProps>;\r\n}\r\n\r\nconst StyledGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 4rem;\r\n`;\r\n\r\nconst Grid: FC<Props> = ({ items }) => {\r\n  return (\r\n    <StyledGrid>\r\n      {items.map((item, i) => (\r\n        <GridItem key={i} {...item} index={i} />\r\n      ))}\r\n    </StyledGrid>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import { HTMLAttributes } from \"react\";\r\nimport { FC } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\ninterface RadioProps {\r\n  text: string;\r\n  value: string;\r\n}\r\n\r\ninterface Props extends HTMLAttributes<HTMLDivElement> {\r\n  currentValue: string;\r\n  options: Array<RadioProps>;\r\n  onButtonClick: Function;\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n\r\n  > * {\r\n    margin-right: 1rem;\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RadioButtons: FC<Props> = ({\r\n  currentValue,\r\n  options,\r\n  onButtonClick,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Container {...props}>\r\n      {options.map(({ text, value }, i) => (\r\n        <Button\r\n          key={i}\r\n          onClick={() => onButtonClick(value)}\r\n          className={value === currentValue ? \"active\" : undefined}\r\n        >\r\n          {text}\r\n        </Button>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RadioButtons;\r\n","import { useEffect, useState } from \"react\";\r\nimport Grid from \"../components/Grid\";\r\nimport HeadingWithBack from \"../components/HeadingWithBack\";\r\nimport Layout from \"../components/Layout\";\r\nimport RadioButtons from \"../components/RadioButtons\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\n\r\nconst TopArtists = () => {\r\n  const [artists, setArtists] = useState<any>([]);\r\n  const [timeRange, setTimeRange] = useState(\"short_term\");\r\n  const { spotifyApi } = useSpotify();\r\n\r\n  useEffect(() => {\r\n    setArtists([]);\r\n    spotifyApi\r\n      .getMyTopArtists({\r\n        limit: 50,\r\n        time_range: timeRange as\r\n          | \"short_term\"\r\n          | \"long_term\"\r\n          | \"medium_term\"\r\n          | undefined,\r\n      })\r\n      .then((data) => {\r\n        setArtists(\r\n          data.body.items.map(({ id, name, images }) => ({\r\n            id,\r\n            name,\r\n            imageUrl: images.length ? images[0].url : \"\",\r\n          }))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [spotifyApi, timeRange]);\r\n\r\n  return (\r\n    <Layout>\r\n      <HeadingWithBack style={{ marginBottom: \"2rem\" }}>\r\n        Your top artists\r\n      </HeadingWithBack>\r\n      <RadioButtons\r\n        currentValue={timeRange}\r\n        onButtonClick={(value: string) => setTimeRange(value)}\r\n        options={[\r\n          { text: \"4 weeks\", value: \"short_term\" },\r\n          { text: \"6 months\", value: \"medium_term\" },\r\n          { text: \"All time\", value: \"long_term\" },\r\n        ]}\r\n        style={{ marginBottom: \"2rem\" }}\r\n      />\r\n      <Grid items={artists} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TopArtists;\r\n","import { useEffect, useState } from \"react\";\r\nimport HeadingWithBack from \"../components/HeadingWithBack\";\r\nimport Layout from \"../components/Layout\";\r\nimport List from \"../components/List\";\r\nimport { ItemProps } from \"../components/ListItem\";\r\nimport RadioButtons from \"../components/RadioButtons\";\r\nimport { useAuth } from \"../providers/AuthProvider\";\r\nimport { useSpotify } from \"../providers/SpotifyProvider\";\r\nimport tracksToListItems from \"../utils/tracksToListItems\";\r\n\r\nconst TopTracks = () => {\r\n  const [tracks, setTracks] = useState<Array<ItemProps>>([]);\r\n  const [timeRange, setTimeRange] = useState(\"short_term\");\r\n  const { spotifyApi } = useSpotify();\r\n\r\n  useEffect(() => {\r\n    setTracks([]);\r\n    spotifyApi\r\n      .getMyTopTracks({\r\n        limit: 50,\r\n        time_range: timeRange as\r\n          | \"short_term\"\r\n          | \"long_term\"\r\n          | \"medium_term\"\r\n          | undefined,\r\n      })\r\n      .then((data) => {\r\n        setTracks(tracksToListItems(data.body.items));\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [spotifyApi, timeRange]);\r\n\r\n  return (\r\n    <Layout>\r\n      <HeadingWithBack style={{ marginBottom: \"2rem\" }}>\r\n        Your top tracks\r\n      </HeadingWithBack>\r\n      <RadioButtons\r\n        currentValue={timeRange}\r\n        onButtonClick={(value: string) => setTimeRange(value)}\r\n        options={[\r\n          { text: \"4 weeks\", value: \"short_term\" },\r\n          { text: \"6 months\", value: \"medium_term\" },\r\n          { text: \"All time\", value: \"long_term\" },\r\n        ]}\r\n        style={{ marginBottom: \"2rem\" }}\r\n      />\r\n      <List items={tracks} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default TopTracks;\r\n","import React, { FC } from \"react\";\nimport { Redirect, Route, RouteProps, Switch } from \"react-router-dom\";\nimport { useAuth } from \"./providers/AuthProvider\";\nimport GlobalStyle from \"./styles/globalStyle\";\nimport Admin from \"./views/Admin\";\nimport Artist from \"./views/Artist\";\nimport Home from \"./views/Home\";\nimport Login from \"./views/Login\";\nimport Lyrics from \"./views/Lyrics\";\nimport Profile from \"./views/Profile\";\nimport Search from \"./views/Search\";\nimport TopArtists from \"./views/TopArtists\";\nimport TopTracks from \"./views/TopTracks\";\n\nconst PrivateRoute: FC<RouteProps> = ({ ...props }) => {\n  const { accessToken } = useAuth();\n  return accessToken ? <Route {...props} /> : <Redirect to=\"/login\" />;\n};\n\nconst PublicOnlyRoute: FC<RouteProps> = ({ ...props }) => {\n  const { accessToken } = useAuth();\n  return !accessToken ? <Route {...props} /> : <Redirect to=\"/\" />;\n};\n\nfunction App() {\n  const { loading } = useAuth();\n\n  return (\n    <>\n      {!loading ? (\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <PrivateRoute path=\"/top-artists\" component={TopArtists} />\n          <PrivateRoute path=\"/top-tracks\" component={TopTracks} />\n          <PrivateRoute path=\"/artist/:id\" component={Artist} />\n          <PrivateRoute path=\"/my-profile\" component={Profile} />\n          <PrivateRoute path=\"/search\" component={Search} />\n          <PrivateRoute path=\"/lyrics\" component={Lyrics} />\n          <PublicOnlyRoute path=\"/login\" component={Login} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route path=\"*\" component={() => <Redirect to=\"/\" />} />\n        </Switch>\n      ) : (\n        \"Loading auth state\"\n      )}\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport AuthProvider from \"./providers/AuthProvider\";\nimport PlayerProvider from \"./providers/PlayerProvider\";\nimport SearchProvider from \"./providers/SearchProvider\";\nimport SpotifyProvider from \"./providers/SpotifyProvider\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AuthProvider>\n        <SearchProvider>\n          <SpotifyProvider>\n            <PlayerProvider>\n              <App />\n            </PlayerProvider>\n          </SpotifyProvider>\n        </SearchProvider>\n      </AuthProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}